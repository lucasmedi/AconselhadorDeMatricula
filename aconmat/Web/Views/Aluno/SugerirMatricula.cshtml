@model Web.Models.SugerirViewModel

@{
    ViewBag.Title = "Sugerir Matrícula";
}

<style type="text/css">
    .li-danger {
        background-color: #d9534f !important;
        color: #ffffff !important;
    }
</style>

<h2>Sugerir Matrícula</h2>

<hr />

<div class="row">
    <p>Ações: </p>
    @Html.ActionLink("Voltar", "Index", "Aluno", new { @class = "btn btn-default" })
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <h4>Informe suas restrições de horário, se houver.</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(o => o.Restricoes, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(o => o.Restricoes, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-default">Sugerir</button>
            </div>
        </div>
    }
</div>

<hr />

<div class="container">
    @if (Model.Matricula != null)
    {
        var grade = Model.Matricula.GetGrade();
        var escreveLinha = false;

        <h3>
            Grade de Disciplinas
        </h3>
        <table class="table">
            <thead>
                <tr>
                    @for (int i = 0; i < grade.GetLength(0); i++)
                    {
                        var temValor = false;
                        for (int j = 0; j < grade.GetLength(1); j++)
                        {
                            var val = grade.GetValue(i, j) as Dominio.Aconselhador.Celula;
                            if (val != null)
                            {
                                temValor = true;
                            }
                        }

                        if (temValor)
                        {
                            <th>@Dominio.Enums.EnumHelper.GetEnumDescription((Dominio.Enums.DiaSemana)i + 2)</th>
                        }
                    }
                    <th>Horário</th>
                </tr>
            </thead>

            @for (int i = 0; i < grade.GetLength(1); i++)
            {
                <tr>
                    @for (int j = 0; j < grade.GetLength(0); j++)
                    {
                        var val = grade.GetValue(j, i) as Dominio.Aconselhador.Celula;
                        if (val != null)
                        {
                            <td>@(val.Bloqueado ? "Livre" : val.CodCred)</td>
                            escreveLinha = true;
                        }
                    }

                    @if (escreveLinha)
                    {
                        <th>@Dominio.Enums.EnumHelper.GetEnumDescription((Dominio.Enums.Horario)i + 1)</th>
                        escreveLinha = false;
                    }
                </tr>
            }
        </table>

        <br />

        <h3>
            Relação de Disciplinas
        </h3>
        <ul class="list-group">
            @foreach (var item in Model.Matricula.GetDisciplinas())
            {
                <li class="list-group-item @(item.Especial ? "li-danger" : "")">@string.Format("{0}-{1:00} - {2}", item.CodCred, item.Creditos, item.Nome)</li>
            }
        </ul>

        using (Html.BeginForm("SalvarSugestao", "Aluno"))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(o => o.Restricoes)
            <button type="submit" class="btn btn-default">Salvar Sugestão</button>
        }
    }
</div>